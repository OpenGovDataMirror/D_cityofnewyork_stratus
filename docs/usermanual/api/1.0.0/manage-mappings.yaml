---
swagger: '2.0'
info:
  version: 1.0.0
  title: Stratus - Spring Boot Actuator Mappings
  description: Displays a collated list of all @RequestMapping paths.
schemes:
- http
host: localhost:8080
basePath: /geoserver/rest
paths:
  /manage/mappings:
    get:
      operationId: mappingsGet
      summary: Displays a collated list of all @RequestMapping paths.
      description: 
      produces:
        - application/vnd.spring-boot.actuator.v1+json;charset=UTF-8
      responses:
        200:
          description: OK
          examples:
            application/vnd.spring-boot.actuator.v1+json;charset=UTF-8: |
              {
                  "contexts": {
                      "bootstrap": {
                          "mappings": {
                              "dispatcherServlets": {},
                              "servletFilters": [],
                              "servlets": []
                          },
                          "parentId": null
                      },
                      "stratus-1": {
                          "mappings": {
                              "dispatcherServlets": {
                                  "dispatcherServlet": [
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/auditevents"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'auditevents'",
                                          "predicate": "{GET /rest/manage/auditevents, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/beans"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'beans'",
                                          "predicate": "{GET /rest/manage/beans, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/caches"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'caches'",
                                          "predicate": "{GET /rest/manage/caches, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/caches/{cache}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'caches-cache'",
                                          "predicate": "{DELETE /rest/manage/caches/{cache}, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/caches"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'caches'",
                                          "predicate": "{DELETE /rest/manage/caches}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/caches/{cache}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'caches-cache'",
                                          "predicate": "{GET /rest/manage/caches/{cache}, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/health"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'health'",
                                          "predicate": "{GET /rest/manage/health, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/health/{component}/{instance}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'health-component-instance'",
                                          "predicate": "{GET /rest/manage/health/{component}/{instance}, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/health/{component}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'health-component'",
                                          "predicate": "{GET /rest/manage/health/{component}, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/conditions"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'conditions'",
                                          "predicate": "{GET /rest/manage/conditions, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/configprops"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'configprops'",
                                          "predicate": "{GET /rest/manage/configprops, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/env/{toMatch}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'env-toMatch'",
                                          "predicate": "{GET /rest/manage/env/{toMatch}, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/env"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'env'",
                                          "predicate": "{GET /rest/manage/env, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/env"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'env'",
                                          "predicate": "{POST /rest/manage/env, consumes [application/vnd.spring-boot.actuator.v2+json || application/json], produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/env"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'env'",
                                          "predicate": "{DELETE /rest/manage/env, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/info"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'info'",
                                          "predicate": "{GET /rest/manage/info, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/loggers"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'loggers'",
                                          "predicate": "{GET /rest/manage/loggers, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/loggers/{name}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'loggers-name'",
                                          "predicate": "{GET /rest/manage/loggers/{name}, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/loggers/{name}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'loggers-name'",
                                          "predicate": "{POST /rest/manage/loggers/{name}, consumes [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/heapdump"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/octet-stream",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'heapdump'",
                                          "predicate": "{GET /rest/manage/heapdump, produces [application/octet-stream]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/threaddump"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'threaddump'",
                                          "predicate": "{GET /rest/manage/threaddump, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/metrics"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'metrics'",
                                          "predicate": "{GET /rest/manage/metrics, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/metrics/{requiredMetricName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'metrics-requiredMetricName'",
                                          "predicate": "{GET /rest/manage/metrics/{requiredMetricName}, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/scheduledtasks"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'scheduledtasks'",
                                          "predicate": "{GET /rest/manage/scheduledtasks, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/httptrace"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'httptrace'",
                                          "predicate": "{GET /rest/manage/httptrace, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/mappings"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'mappings'",
                                          "predicate": "{GET /rest/manage/mappings, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.WebMvcLinksHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/lang/Object;",
                                                  "name": "links"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator root web endpoint",
                                          "predicate": "{GET /rest/manage, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.controller.ClasspathPublisherController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V",
                                                  "name": "doClasspathPublisher"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [],
                                                  "params": [],
                                                  "patterns": [
                                                      "/openlayers/**",
                                                      "/options.png",
                                                      "/openlayers3/**",
                                                      "/schemas/**",
                                                      "/j_acegi_security_check",
                                                      "/login",
                                                      "/j_spring_security_check"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.controller.ClasspathPublisherController.doClasspathPublisher(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception",
                                          "predicate": "{ [/openlayers/**, /options.png, /openlayers3/**, /schemas/**, /j_acegi_security_check, /login, /j_spring_security_check]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.controller.FilePublisherController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V",
                                                  "name": "doFilePublisher"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [],
                                                  "params": [],
                                                  "patterns": [
                                                      "/temp/**",
                                                      "/styles/**",
                                                      "/www/**"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.controller.FilePublisherController.doFilePublisher(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception",
                                          "predicate": "{ [/temp/**, /styles/**, /www/**]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.controller.OwsController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V",
                                                  "name": "ows"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [],
                                                  "params": [],
                                                  "patterns": [
                                                      "/ows",
                                                      "/*/ows",
                                                      "/*/*/ows",
                                                      "/wfs",
                                                      "/*/wfs",
                                                      "/*/*/wfs",
                                                      "/wfs/*",
                                                      "/*/wfs/*",
                                                      "/*/*/wfs/*",
                                                      "/wms",
                                                      "/*/wms",
                                                      "/*/*/wms",
                                                      "/wcs",
                                                      "/*/wcs",
                                                      "/*/*/wcs",
                                                      "/wps",
                                                      "/csw",
                                                      "/*/wps",
                                                      "/*/wps/*",
                                                      "/*/*/wps/*",
                                                      "/animate",
                                                      "/kml",
                                                      "/kml/*",
                                                      "/kml/icon/**/*"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.controller.OwsController.ows(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception",
                                          "predicate": "{ [/ows, /*/ows, /*/*/ows, /wfs, /*/wfs, /*/*/wfs, /wfs/*, /*/wfs/*, /*/*/wfs/*, /wms, /*/wms, /*/*/wms, /wcs, /*/wcs, /*/*/wcs, /wps, /csw, /*/wps, /*/wps/*, /*/*/wps/*, /animate, /kml, /kml/*, /kml/icon/**/*]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.controller.WicketController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V",
                                                  "name": "doWicket"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [],
                                                  "params": [],
                                                  "patterns": [
                                                      "/web",
                                                      "/web/**",
                                                      "/web/resources/**"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.controller.WicketController.doWicket(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception",
                                          "predicate": "{ [/web, /web/**, /web/resources/**]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Lstratus/rest/xml/JaxbRequestFilterChain;)V",
                                                  "name": "postFilterChain"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/filterChains"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.rest.SecurityConfigRestController.postFilterChain(stratus.rest.xml.JaxbRequestFilterChain) throws java.lang.Exception",
                                          "predicate": "{POST /rest/security/filterChains}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "()Lstratus/rest/xml/JaxbRequestFilterChainList;",
                                                  "name": "getFilterChains"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/filterChains"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public stratus.rest.xml.JaxbRequestFilterChainList stratus.rest.SecurityConfigRestController.getFilterChains() throws java.lang.Exception",
                                          "predicate": "{GET /rest/security/filterChains, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Ljava/lang/String;Lstratus/rest/xml/JaxbRequestFilterChain;)V",
                                                  "name": "putFilterChain"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/filterChains/{name}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.rest.SecurityConfigRestController.putFilterChain(java.lang.String,stratus.rest.xml.JaxbRequestFilterChain) throws java.lang.Exception",
                                          "predicate": "{PUT /rest/security/filterChains/{name}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "deleteFilterChain"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/filterChains/{name}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.rest.SecurityConfigRestController.deleteFilterChain(java.lang.String) throws java.lang.Exception",
                                          "predicate": "{DELETE /rest/security/filterChains/{name}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Ljava/lang/String;)Lstratus/rest/xml/JaxbRequestFilterChain;",
                                                  "name": "getFilterChain"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/filterChains/{name}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public stratus.rest.xml.JaxbRequestFilterChain stratus.rest.SecurityConfigRestController.getFilterChain(java.lang.String) throws java.lang.Exception",
                                          "predicate": "{GET /rest/security/filterChains/{name}, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "()Lstratus/rest/xml/JaxbAuthFilterList;",
                                                  "name": "getAuthFilters"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/authFilters"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public stratus.rest.xml.JaxbAuthFilterList stratus.rest.SecurityConfigRestController.getAuthFilters() throws java.lang.Exception",
                                          "predicate": "{GET /rest/security/authFilters}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Ljava/lang/String;)[B",
                                                  "name": "getAuthFilter"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/authFilters/{name}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public byte[] stratus.rest.SecurityConfigRestController.getAuthFilter(java.lang.String) throws java.io.IOException",
                                          "predicate": "{GET /rest/security/authFilters/{name}, produces [application/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "([B)V",
                                                  "name": "postAuthFilter"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/authFilters"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.rest.SecurityConfigRestController.postAuthFilter(byte[]) throws java.io.IOException,org.geoserver.security.validation.SecurityConfigException",
                                          "predicate": "{POST /rest/security/authFilters}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Ljava/lang/String;[B)V",
                                                  "name": "putAuthFilter"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/authFilters/{name}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.rest.SecurityConfigRestController.putAuthFilter(java.lang.String,byte[]) throws java.io.IOException,org.geoserver.security.validation.SecurityConfigException",
                                          "predicate": "{PUT /rest/security/authFilters/{name}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "deleteAuthFilter"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/authFilters/{name}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.rest.SecurityConfigRestController.deleteAuthFilter(java.lang.String) throws java.io.IOException,org.geoserver.security.validation.SecurityConfigException",
                                          "predicate": "{DELETE /rest/security/authFilters/{name}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "()Lstratus/rest/xml/JaxbAuthProviderList;",
                                                  "name": "getAuthProviders"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/authProviders"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public stratus.rest.xml.JaxbAuthProviderList stratus.rest.SecurityConfigRestController.getAuthProviders() throws java.lang.Exception",
                                          "predicate": "{GET /rest/security/authProviders}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Ljava/lang/String;)[B",
                                                  "name": "getAuthProvider"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/authProviders/{name}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public byte[] stratus.rest.SecurityConfigRestController.getAuthProvider(java.lang.String) throws java.io.IOException",
                                          "predicate": "{GET /rest/security/authProviders/{name}, produces [application/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "([B)V",
                                                  "name": "postAuthProvider"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/authProviders"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.rest.SecurityConfigRestController.postAuthProvider(byte[]) throws java.io.IOException,org.geoserver.security.validation.SecurityConfigException",
                                          "predicate": "{POST /rest/security/authProviders}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Ljava/lang/String;[B)V",
                                                  "name": "putAuthProvider"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/authProviders/{name}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.rest.SecurityConfigRestController.putAuthProvider(java.lang.String,byte[]) throws java.io.IOException,org.geoserver.security.validation.SecurityConfigException",
                                          "predicate": "{PUT /rest/security/authProviders/{name}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "deleteAuthProvider"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/authProviders/{name}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.rest.SecurityConfigRestController.deleteAuthProvider(java.lang.String) throws java.io.IOException,org.geoserver.security.validation.SecurityConfigException",
                                          "predicate": "{DELETE /rest/security/authProviders/{name}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "()Lstratus/rest/xml/JaxbPasswordProviderList;",
                                                  "name": "getPasswordProviders"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/masterPasswordProviders"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public stratus.rest.xml.JaxbPasswordProviderList stratus.rest.SecurityConfigRestController.getPasswordProviders() throws java.lang.Exception",
                                          "predicate": "{GET /rest/security/masterPasswordProviders}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Ljava/lang/String;)[B",
                                                  "name": "getPasswordProvider"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/masterPasswordProviders/{name}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public byte[] stratus.rest.SecurityConfigRestController.getPasswordProvider(java.lang.String) throws java.io.IOException",
                                          "predicate": "{GET /rest/security/masterPasswordProviders/{name}, produces [application/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "([B)V",
                                                  "name": "postPasswordProvider"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/masterPasswordProviders"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.rest.SecurityConfigRestController.postPasswordProvider(byte[]) throws java.io.IOException,org.geoserver.security.validation.SecurityConfigException",
                                          "predicate": "{POST /rest/security/masterPasswordProviders}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Ljava/lang/String;[B)V",
                                                  "name": "putPasswordProvider"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/masterPasswordProviders/{name}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.rest.SecurityConfigRestController.putPasswordProvider(java.lang.String,byte[]) throws java.io.IOException,org.geoserver.security.validation.SecurityConfigException",
                                          "predicate": "{PUT /rest/security/masterPasswordProviders/{name}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "deletePasswordProvider"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/masterPasswordProviders/{name}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.rest.SecurityConfigRestController.deletePasswordProvider(java.lang.String) throws java.io.IOException,org.geoserver.security.validation.SecurityConfigException",
                                          "predicate": "{DELETE /rest/security/masterPasswordProviders/{name}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "()Lstratus/rest/xml/JaxbPasswordPolicyList;",
                                                  "name": "getPasswordPolicies"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/passwordPolicies"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public stratus.rest.xml.JaxbPasswordPolicyList stratus.rest.SecurityConfigRestController.getPasswordPolicies() throws java.lang.Exception",
                                          "predicate": "{GET /rest/security/passwordPolicies}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Ljava/lang/String;)[B",
                                                  "name": "getPasswordPolicy"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/passwordPolicies/{name}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public byte[] stratus.rest.SecurityConfigRestController.getPasswordPolicy(java.lang.String) throws java.io.IOException",
                                          "predicate": "{GET /rest/security/passwordPolicies/{name}, produces [application/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "([B)V",
                                                  "name": "postPasswordPolicy"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/passwordPolicies"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.rest.SecurityConfigRestController.postPasswordPolicy(byte[]) throws java.io.IOException,org.geoserver.security.validation.SecurityConfigException",
                                          "predicate": "{POST /rest/security/passwordPolicies}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Ljava/lang/String;[B)V",
                                                  "name": "putPasswordPolicy"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/passwordPolicies/{name}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.rest.SecurityConfigRestController.putPasswordPolicy(java.lang.String,byte[]) throws java.io.IOException,org.geoserver.security.validation.SecurityConfigException",
                                          "predicate": "{PUT /rest/security/passwordPolicies/{name}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "deletePasswordPolicy"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/passwordPolicies/{name}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.rest.SecurityConfigRestController.deletePasswordPolicy(java.lang.String) throws java.io.IOException,org.geoserver.security.validation.SecurityConfigException",
                                          "predicate": "{DELETE /rest/security/passwordPolicies/{name}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "()Lstratus/rest/xml/JaxbSecurityConfig;",
                                                  "name": "get"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public stratus.rest.xml.JaxbSecurityConfig stratus.rest.SecurityConfigRestController.get() throws java.io.IOException",
                                          "predicate": "{GET /rest/security, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.rest.SecurityConfigRestController",
                                                  "descriptor": "(Lstratus/rest/xml/JaxbSecurityConfig;)V",
                                                  "name": "put"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.rest.SecurityConfigRestController.put(stratus.rest.xml.JaxbSecurityConfig) throws java.lang.Exception",
                                          "predicate": "{PUT /rest/security}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.redis.rest.connection.ConnectionViewController",
                                                  "descriptor": "(Ljava/util/Map;)Ljava/lang/String;",
                                                  "name": "getClientInfo"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/redis/connection"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public java.lang.String stratus.redis.rest.connection.ConnectionViewController.getClientInfo(java.util.Map<java.lang.String, java.lang.Object>)",
                                          "predicate": "{GET /rest/redis/connection}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.redis.rest.data.DataViewController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;",
                                                  "name": "getData"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/redis/data"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public java.lang.String stratus.redis.rest.data.DataViewController.getData(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)",
                                          "predicate": "{GET /rest/redis/data}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.redis.rest.reinitialize.ReinitializeController",
                                                  "descriptor": "(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;",
                                                  "name": "reinitialize"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/redis/reinitialize"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public java.lang.String stratus.redis.rest.reinitialize.ReinitializeController.reinitialize(java.util.Map<java.lang.String, java.lang.Object>,java.lang.String)",
                                          "predicate": "{GET /rest/redis/reinitialize}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.redis.rest.terminal.TerminalViewController",
                                                  "descriptor": "(Ljava/util/Map;)Ljava/lang/String;",
                                                  "name": "terminal"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/redis/terminal"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public java.lang.String stratus.redis.rest.terminal.TerminalViewController.terminal(java.util.Map<java.lang.String, java.lang.Object>)",
                                          "predicate": "{GET /rest/redis/terminal}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.redis.rest.command.RedisCommandController",
                                                  "descriptor": "(Ljava/lang/String;)Ljava/util/List;",
                                                  "name": "exec"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "text/plain",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/redis/exec"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public java.util.List<java.lang.String> stratus.redis.rest.command.RedisCommandController.exec(java.lang.String)",
                                          "predicate": "{POST /rest/redis/exec, consumes [text/plain], produces [application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.redis.rest.info.InfoViewController",
                                                  "descriptor": "(Ljava/util/Map;)Ljava/lang/String;",
                                                  "name": "getInfo"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/redis/info"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public java.lang.String stratus.redis.rest.info.InfoViewController.getInfo(java.util.Map<java.lang.String, java.lang.Object>)",
                                          "predicate": "{GET /rest/redis/info}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.controller.GwcController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V",
                                                  "name": "handleGWCRequest"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/demo/**",
                                                      "/gwc/home/**",
                                                      "/gwc/rest/**"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.controller.GwcController.handleGWCRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception",
                                          "predicate": "{ [/gwc/demo/**, /gwc/home/**, /gwc/rest/**]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.controller.GwcServiceController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V",
                                                  "name": "handleServiceRequest"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/service/**",
                                                      "/*/gwc/service/**",
                                                      "/*/*/gwc/service/**"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void stratus.controller.GwcServiceController.handleServiceRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception",
                                          "predicate": "{ [/gwc/service/**, /*/gwc/service/**, /*/*/gwc/service/**]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "stratus.wps.controller.WPSWriteStatusController",
                                                  "descriptor": "(Ljava/lang/String;)Lstratus/wps/model/StratusExecutionStatus;",
                                                  "name": "getStatus"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/wps/{executionId}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public stratus.wps.model.StratusExecutionStatus stratus.wps.controller.WPSWriteStatusController.getStatus(java.lang.String)",
                                          "predicate": "{GET /rest/wps/{executionId}, produces [application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.IndexController",
                                                  "descriptor": "()Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "get"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest",
                                                      "/rest/index"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper org.geoserver.rest.IndexController.get()",
                                          "predicate": "{GET [/rest, /rest/index], produces [text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.SettingsController",
                                                  "descriptor": "()Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "contactGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/settings/contact"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.config.ContactInfo> org.geoserver.rest.SettingsController.contactGet()",
                                          "predicate": "{GET /rest/settings/contact, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.SettingsController",
                                                  "descriptor": "(Lorg/geoserver/config/ContactInfo;)V",
                                                  "name": "contactSet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/settings/contact"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.SettingsController.contactSet(org.geoserver.config.ContactInfo)",
                                          "predicate": "{PUT /rest/settings/contact, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.SettingsController",
                                                  "descriptor": "()Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "settingsGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/settings"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.config.GeoServerInfo> org.geoserver.rest.SettingsController.settingsGet()",
                                          "predicate": "{GET /rest/settings, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.SettingsController",
                                                  "descriptor": "(Lorg/geoserver/config/GeoServerInfo;)V",
                                                  "name": "settingsPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/settings"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.SettingsController.settingsPut(org.geoserver.config.GeoServerInfo)",
                                          "predicate": "{PUT /rest/settings, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.CatalogModeController",
                                                  "descriptor": "()Lorg/geoserver/rest/catalog/NamedMap;",
                                                  "name": "mapGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/acl/catalog"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.catalog.NamedMap org.geoserver.rest.security.CatalogModeController.mapGet() throws java.lang.Exception",
                                          "predicate": "{GET /rest/security/acl/catalog, produces [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.CatalogModeController",
                                                  "descriptor": "(Ljava/util/Map;)V",
                                                  "name": "mapPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/acl/catalog"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "protected void org.geoserver.rest.security.CatalogModeController.mapPut(java.util.Map) throws java.lang.Exception",
                                          "predicate": "{PUT /rest/security/acl/catalog, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UserPasswordController",
                                                  "descriptor": "(Ljava/util/Map;)V",
                                                  "name": "passwordPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/self/password"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.UserPasswordController.passwordPut(java.util.Map<java.lang.String, java.lang.String>)",
                                          "predicate": "{PUT /rest/security/self/password, consumes [application/json || application/xml || text/xml || text/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UserPasswordController",
                                                  "descriptor": "()V",
                                                  "name": "passwordGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/self/password"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.UserPasswordController.passwordGet()",
                                          "predicate": "{GET /rest/security/self/password}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.AbstractAclController",
                                                  "descriptor": "(Lorg/geoserver/rest/security/RuleMap;)V",
                                                  "name": "rulesPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/acl/services"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.AbstractAclController.rulesPut(org.geoserver.rest.security.RuleMap) throws java.io.IOException",
                                          "predicate": "{PUT /rest/security/acl/services, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.AbstractAclController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;)V",
                                                  "name": "rulesDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/acl/services/**"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.AbstractAclController.rulesDelete(javax.servlet.http.HttpServletRequest) throws java.io.UnsupportedEncodingException",
                                          "predicate": "{DELETE /rest/security/acl/services/**}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.AbstractAclController",
                                                  "descriptor": "(Lorg/geoserver/rest/security/RuleMap;)V",
                                                  "name": "rulesPost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/acl/services"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.AbstractAclController.rulesPost(org.geoserver.rest.security.RuleMap) throws java.io.IOException",
                                          "predicate": "{POST /rest/security/acl/services, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.AbstractAclController",
                                                  "descriptor": "()Lorg/geoserver/rest/security/RuleMap;",
                                                  "name": "rulesGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/acl/services"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.security.RuleMap org.geoserver.rest.security.AbstractAclController.rulesGet() throws java.io.IOException",
                                          "predicate": "{GET /rest/security/acl/services, produces [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.RolesRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/security/xml/JaxbRoleList;",
                                                  "name": "getUser"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/roles/service/{serviceName}/user/{user}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "protected org.geoserver.rest.security.xml.JaxbRoleList org.geoserver.rest.security.RolesRestController.getUser(java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{GET /rest/security/roles/service/{serviceName}/user/{user}, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.RolesRestController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/security/xml/JaxbRoleList;",
                                                  "name": "getUser"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/roles/user/{user}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "protected org.geoserver.rest.security.xml.JaxbRoleList org.geoserver.rest.security.RolesRestController.getUser(java.lang.String) throws java.io.IOException",
                                          "predicate": "{GET /rest/security/roles/user/{user}, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.RolesRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "associate"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/roles/service/{serviceName}/role/{role}/user/{user}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.RolesRestController.associate(java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{POST /rest/security/roles/service/{serviceName}/role/{role}/user/{user}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.RolesRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "associate"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/roles/role/{role}/user/{user}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.RolesRestController.associate(java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{POST /rest/security/roles/role/{role}/user/{user}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.RolesRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "disassociate"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/roles/service/{serviceName}/role/{role}/user/{user}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.RolesRestController.disassociate(java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{DELETE /rest/security/roles/service/{serviceName}/role/{role}/user/{user}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.RolesRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "disassociate"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/roles/role/{role}/user/{user}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.RolesRestController.disassociate(java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{DELETE /rest/security/roles/role/{role}/user/{user}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.RolesRestController",
                                                  "descriptor": "()Lorg/geoserver/rest/security/xml/JaxbRoleList;",
                                                  "name": "get"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/roles"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.security.xml.JaxbRoleList org.geoserver.rest.security.RolesRestController.get() throws java.io.IOException",
                                          "predicate": "{GET /rest/security/roles, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.RolesRestController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/security/xml/JaxbRoleList;",
                                                  "name": "get"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/roles/service/{serviceName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "protected org.geoserver.rest.security.xml.JaxbRoleList org.geoserver.rest.security.RolesRestController.get(java.lang.String) throws java.io.IOException",
                                          "predicate": "{GET /rest/security/roles/service/{serviceName}, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.RolesRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "delete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/roles/service/{serviceName}/role/{role}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.RolesRestController.delete(java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{DELETE /rest/security/roles/service/{serviceName}/role/{role}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.RolesRestController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "delete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/roles/role/{role}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.RolesRestController.delete(java.lang.String) throws java.io.IOException",
                                          "predicate": "{DELETE /rest/security/roles/role/{role}, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.RolesRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "insert"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/roles/service/{serviceName}/role/{role}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.RolesRestController.insert(java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{POST /rest/security/roles/service/{serviceName}/role/{role}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.RolesRestController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "insert"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/roles/role/{role}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.RolesRestController.insert(java.lang.String) throws java.io.IOException",
                                          "predicate": "{POST /rest/security/roles/role/{role}, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.AbstractAclController",
                                                  "descriptor": "(Lorg/geoserver/rest/security/RuleMap;)V",
                                                  "name": "rulesPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/acl/layers"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.AbstractAclController.rulesPut(org.geoserver.rest.security.RuleMap) throws java.io.IOException",
                                          "predicate": "{PUT /rest/security/acl/layers, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.AbstractAclController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;)V",
                                                  "name": "rulesDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/acl/layers/**"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.AbstractAclController.rulesDelete(javax.servlet.http.HttpServletRequest) throws java.io.UnsupportedEncodingException",
                                          "predicate": "{DELETE /rest/security/acl/layers/**}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.AbstractAclController",
                                                  "descriptor": "(Lorg/geoserver/rest/security/RuleMap;)V",
                                                  "name": "rulesPost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/acl/layers"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.AbstractAclController.rulesPost(org.geoserver.rest.security.RuleMap) throws java.io.IOException",
                                          "predicate": "{POST /rest/security/acl/layers, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.AbstractAclController",
                                                  "descriptor": "()Lorg/geoserver/rest/security/RuleMap;",
                                                  "name": "rulesGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/acl/layers"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.security.RuleMap org.geoserver.rest.security.AbstractAclController.rulesGet() throws java.io.IOException",
                                          "predicate": "{GET /rest/security/acl/layers, produces [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "insertGroup"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/service/{serviceName}/group/{group}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.UsersRestController.insertGroup(java.lang.String,java.lang.String) throws org.geoserver.security.validation.PasswordPolicyException,java.io.IOException",
                                          "predicate": "{POST /rest/security/usergroup/service/{serviceName}/group/{group}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "insertGroup"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/group/{group}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.UsersRestController.insertGroup(java.lang.String) throws org.geoserver.security.validation.PasswordPolicyException,java.io.IOException",
                                          "predicate": "{POST /rest/security/usergroup/group/{group}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "()Lorg/geoserver/rest/security/xml/JaxbGroupList;",
                                                  "name": "getGroups"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/groups"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.security.xml.JaxbGroupList org.geoserver.rest.security.UsersRestController.getGroups() throws java.io.IOException",
                                          "predicate": "{GET /rest/security/usergroup/groups, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/security/xml/JaxbGroupList;",
                                                  "name": "getGroups"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/service/{serviceName}/groups"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.security.xml.JaxbGroupList org.geoserver.rest.security.UsersRestController.getGroups(java.lang.String) throws java.io.IOException",
                                          "predicate": "{GET /rest/security/usergroup/service/{serviceName}/groups, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/security/xml/JaxbGroupList;",
                                                  "name": "getGroupsFromUser"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/service/{serviceName}/user/{user}/groups"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.security.xml.JaxbGroupList org.geoserver.rest.security.UsersRestController.getGroupsFromUser(java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{GET /rest/security/usergroup/service/{serviceName}/user/{user}/groups, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/security/xml/JaxbGroupList;",
                                                  "name": "getGroupsFromUser"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/user/{user}/groups"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.security.xml.JaxbGroupList org.geoserver.rest.security.UsersRestController.getGroupsFromUser(java.lang.String) throws java.io.IOException",
                                          "predicate": "{GET /rest/security/usergroup/user/{user}/groups, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "disassociateUserFromGroup"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/user/{user}/group/{group}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.UsersRestController.disassociateUserFromGroup(java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{DELETE /rest/security/usergroup/user/{user}/group/{group}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "disassociateUserFromGroup"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/service/{serviceName}/user/{user}/group/{group}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.UsersRestController.disassociateUserFromGroup(java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{DELETE /rest/security/usergroup/service/{serviceName}/user/{user}/group/{group}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/security/xml/JaxbUserList;",
                                                  "name": "getUsers"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/service/{serviceName}/users"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.security.xml.JaxbUserList org.geoserver.rest.security.UsersRestController.getUsers(java.lang.String) throws java.io.IOException",
                                          "predicate": "{GET /rest/security/usergroup/service/{serviceName}/users, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "()Lorg/geoserver/rest/security/xml/JaxbUserList;",
                                                  "name": "getUsers"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/users"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.security.xml.JaxbUserList org.geoserver.rest.security.UsersRestController.getUsers() throws java.io.IOException",
                                          "predicate": "{GET /rest/security/usergroup/users, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/security/xml/JaxbUserList;",
                                                  "name": "getUsersFromGroup"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/group/{group}/users"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.security.xml.JaxbUserList org.geoserver.rest.security.UsersRestController.getUsersFromGroup(java.lang.String) throws java.io.IOException",
                                          "predicate": "{GET /rest/security/usergroup/group/{group}/users, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/security/xml/JaxbUserList;",
                                                  "name": "getUsersFromGroup"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/service/{serviceName}/group/{group}/users"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.security.xml.JaxbUserList org.geoserver.rest.security.UsersRestController.getUsersFromGroup(java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{GET /rest/security/usergroup/service/{serviceName}/group/{group}/users, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "deleteGroup"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/service/{serviceName}/group/{group}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.UsersRestController.deleteGroup(java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{DELETE /rest/security/usergroup/service/{serviceName}/group/{group}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "deleteGroup"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/group/{group}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.UsersRestController.deleteGroup(java.lang.String) throws java.io.IOException",
                                          "predicate": "{DELETE /rest/security/usergroup/group/{group}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "associateUserToGroup"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/service/{serviceName}/user/{user}/group/{group}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.UsersRestController.associateUserToGroup(java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{POST /rest/security/usergroup/service/{serviceName}/user/{user}/group/{group}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "associateUserToGroup"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/user/{user}/group/{group}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.UsersRestController.associateUserToGroup(java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{POST /rest/security/usergroup/user/{user}/group/{group}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Lorg/geoserver/rest/security/xml/JaxbUser;)V",
                                                  "name": "insertUser"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/users"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.UsersRestController.insertUser(org.geoserver.rest.security.xml.JaxbUser) throws org.geoserver.security.validation.PasswordPolicyException,java.io.IOException",
                                          "predicate": "{POST /rest/security/usergroup/users}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;Lorg/geoserver/rest/security/xml/JaxbUser;)V",
                                                  "name": "insertUser"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/service/{serviceName}/users"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.UsersRestController.insertUser(java.lang.String,org.geoserver.rest.security.xml.JaxbUser) throws org.geoserver.security.validation.PasswordPolicyException,java.io.IOException",
                                          "predicate": "{POST /rest/security/usergroup/service/{serviceName}/users}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/geoserver/rest/security/xml/JaxbUser;)V",
                                                  "name": "updateUser"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/service/{serviceName}/user/{user}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.UsersRestController.updateUser(java.lang.String,java.lang.String,org.geoserver.rest.security.xml.JaxbUser) throws org.geoserver.security.validation.PasswordPolicyException,java.io.IOException",
                                          "predicate": "{POST /rest/security/usergroup/service/{serviceName}/user/{user}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;Lorg/geoserver/rest/security/xml/JaxbUser;)V",
                                                  "name": "updateUser"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/user/{user}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.UsersRestController.updateUser(java.lang.String,org.geoserver.rest.security.xml.JaxbUser) throws org.geoserver.security.validation.PasswordPolicyException,java.io.IOException",
                                          "predicate": "{POST /rest/security/usergroup/user/{user}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "deleteUser"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/service/{serviceName}/user/{user}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.UsersRestController.deleteUser(java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{DELETE /rest/security/usergroup/service/{serviceName}/user/{user}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.UsersRestController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "deleteUser"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/usergroup/user/{user}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.UsersRestController.deleteUser(java.lang.String) throws java.io.IOException",
                                          "predicate": "{DELETE /rest/security/usergroup/user/{user}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.MasterPasswordController",
                                                  "descriptor": "()Lorg/geoserver/rest/catalog/NamedMap;",
                                                  "name": "masterPasswordGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/masterpw"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.catalog.NamedMap<java.lang.String, java.lang.String> org.geoserver.rest.security.MasterPasswordController.masterPasswordGet() throws java.io.IOException",
                                          "predicate": "{GET /rest/security/masterpw, produces [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.MasterPasswordController",
                                                  "descriptor": "(Ljava/util/Map;)V",
                                                  "name": "masterPasswordPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/masterpw"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.MasterPasswordController.masterPasswordPut(java.util.Map<java.lang.String, java.lang.String>) throws java.io.IOException",
                                          "predicate": "{PUT /rest/security/masterpw, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.AbstractAclController",
                                                  "descriptor": "(Lorg/geoserver/rest/security/RuleMap;)V",
                                                  "name": "rulesPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/acl/rest"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.AbstractAclController.rulesPut(org.geoserver.rest.security.RuleMap) throws java.io.IOException",
                                          "predicate": "{PUT /rest/security/acl/rest, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.AbstractAclController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;)V",
                                                  "name": "rulesDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/acl/rest/**"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.AbstractAclController.rulesDelete(javax.servlet.http.HttpServletRequest) throws java.io.UnsupportedEncodingException",
                                          "predicate": "{DELETE /rest/security/acl/rest/**}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.AbstractAclController",
                                                  "descriptor": "(Lorg/geoserver/rest/security/RuleMap;)V",
                                                  "name": "rulesPost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/acl/rest"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.security.AbstractAclController.rulesPost(org.geoserver.rest.security.RuleMap) throws java.io.IOException",
                                          "predicate": "{POST /rest/security/acl/rest, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.security.AbstractAclController",
                                                  "descriptor": "()Lorg/geoserver/rest/security/RuleMap;",
                                                  "name": "rulesGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/security/acl/rest"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.security.RuleMap org.geoserver.rest.security.AbstractAclController.rulesGet() throws java.io.IOException",
                                          "predicate": "{GET /rest/security/acl/rest, produces [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.LocalSettingsController",
                                                  "descriptor": "(Ljava/lang/String;Lorg/geoserver/config/SettingsInfo;)Ljava/lang/String;",
                                                  "name": "localSettingsCreate"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/settings"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public java.lang.String org.geoserver.rest.LocalSettingsController.localSettingsCreate(java.lang.String,org.geoserver.config.SettingsInfo)",
                                          "predicate": "{POST /rest/workspaces/{workspaceName}/settings, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.LocalSettingsController",
                                                  "descriptor": "(Ljava/lang/String;Lorg/geoserver/config/SettingsInfo;)V",
                                                  "name": "localSettingsPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/settings"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.LocalSettingsController.localSettingsPut(java.lang.String,org.geoserver.config.SettingsInfo)",
                                          "predicate": "{PUT /rest/workspaces/{workspaceName}/settings, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.LocalSettingsController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "localSetingsDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/settings"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.LocalSettingsController.localSetingsDelete(java.lang.String)",
                                          "predicate": "{DELETE /rest/workspaces/{workspaceName}/settings}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.LocalSettingsController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "localSettingsGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/settings"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.config.SettingsInfo> org.geoserver.rest.LocalSettingsController.localSettingsGet(java.lang.String)",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/settings, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.FontListController",
                                                  "descriptor": "()Ljava/util/Map;",
                                                  "name": "fontsGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/fonts"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public java.util.Map<java.lang.String, java.util.Set<java.lang.String>> org.geoserver.rest.FontListController.fontsGet()",
                                          "predicate": "{GET /rest/fonts, produces [application/json || application/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.resources.ResourceController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;",
                                                  "name": "resourceGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET",
                                                      "HEAD"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/resource",
                                                      "/rest/resource/**"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "*/*",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public java.lang.Object org.geoserver.rest.resources.ResourceController.resourceGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)",
                                          "predicate": "{[GET, HEAD] [/rest/resource, /rest/resource/**], produces [*/*]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.resources.ResourceController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)V",
                                                  "name": "resourcePut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "*/*",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/resource",
                                                      "/rest/resource/**"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.resources.ResourceController.resourcePut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
                                          "predicate": "{PUT [/rest/resource, /rest/resource/**], consumes [*/*]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.resources.ResourceController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;)V",
                                                  "name": "resourceDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/resource",
                                                      "/rest/resource/**"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.resources.ResourceController.resourceDelete(javax.servlet.http.HttpServletRequest)",
                                          "predicate": "{DELETE [/rest/resource, /rest/resource/**]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WorkspaceController",
                                                  "descriptor": "(Lorg/geoserver/catalog/WorkspaceInfo;ZLorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "workspacePost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<java.lang.String> org.geoserver.rest.catalog.WorkspaceController.workspacePost(org.geoserver.catalog.WorkspaceInfo,boolean,org.springframework.web.util.UriComponentsBuilder)",
                                          "predicate": "{POST /rest/workspaces, consumes [text/xml || application/xml || text/json || application/json], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WorkspaceController",
                                                  "descriptor": "(Lorg/geoserver/catalog/WorkspaceInfo;Ljava/lang/String;Lorg/springframework/web/util/UriComponentsBuilder;)V",
                                                  "name": "workspacePut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.WorkspaceController.workspacePut(org.geoserver.catalog.WorkspaceInfo,java.lang.String,org.springframework.web.util.UriComponentsBuilder)",
                                          "predicate": "{PUT /rest/workspaces/{workspaceName}, consumes [text/xml || application/xml || text/json || application/json], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WorkspaceController",
                                                  "descriptor": "(Ljava/lang/String;Z)V",
                                                  "name": "workspaceDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "protected void org.geoserver.rest.catalog.WorkspaceController.workspaceDelete(java.lang.String,boolean)",
                                          "predicate": "{DELETE /rest/workspaces/{workspaceName}, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WorkspaceController",
                                                  "descriptor": "()Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "workspacesGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper org.geoserver.rest.catalog.WorkspaceController.workspacesGet()",
                                          "predicate": "{GET /rest/workspaces, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WorkspaceController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "workspaceGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.WorkspaceInfo> org.geoserver.rest.catalog.WorkspaceController.workspaceGet(java.lang.String)",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMSLayerController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Ljava/lang/Object;",
                                                  "name": "layersGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmslayers",
                                                      "/rest/workspaces/{workspaceName}/wmsstores/{storeName}/wmslayers"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public java.lang.Object org.geoserver.rest.catalog.WMSLayerController.layersGet(java.lang.String,java.lang.String,boolean,java.lang.String)",
                                          "predicate": "{GET [/rest/workspaces/{workspaceName}/wmslayers, /rest/workspaces/{workspaceName}/wmsstores/{storeName}/wmslayers], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMSLayerController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "layerGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmslayers/{layerName}",
                                                      "/rest/workspaces/{workspaceName}/wmsstores/{storeName}/wmslayers/{layerName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.WMSLayerInfo> org.geoserver.rest.catalog.WMSLayerController.layerGet(java.lang.String,java.lang.String,java.lang.String)",
                                          "predicate": "{GET [/rest/workspaces/{workspaceName}/wmslayers/{layerName}, /rest/workspaces/{workspaceName}/wmsstores/{storeName}/wmslayers/{layerName}], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMSLayerController",
                                                  "descriptor": "(Lorg/geoserver/catalog/WMSLayerInfo;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "layerPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmslayers/{layerName}",
                                                      "/rest/workspaces/{workspaceName}/wmsstores/{storeName}/wmslayers/{layerName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.WMSLayerController.layerPut(org.geoserver.catalog.WMSLayerInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
                                          "predicate": "{PUT [/rest/workspaces/{workspaceName}/wmslayers/{layerName}, /rest/workspaces/{workspaceName}/wmsstores/{storeName}/wmslayers/{layerName}], consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMSLayerController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V",
                                                  "name": "layerDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmslayers/{layerName}",
                                                      "/rest/workspaces/{workspaceName}/wmsstores/{storeName}/wmslayers/{layerName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.WMSLayerController.layerDelete(java.lang.String,java.lang.String,java.lang.String,boolean)",
                                          "predicate": "{DELETE [/rest/workspaces/{workspaceName}/wmslayers/{layerName}, /rest/workspaces/{workspaceName}/wmsstores/{storeName}/wmslayers/{layerName}]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMSLayerController",
                                                  "descriptor": "(Lorg/geoserver/catalog/WMSLayerInfo;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "layerPost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmslayers",
                                                      "/rest/workspaces/{workspaceName}/wmsstores/{storeName}/wmslayers"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<java.lang.String> org.geoserver.rest.catalog.WMSLayerController.layerPost(org.geoserver.catalog.WMSLayerInfo,java.lang.String,java.lang.String,org.springframework.web.util.UriComponentsBuilder) throws java.lang.Exception",
                                          "predicate": "{POST [/rest/workspaces/{workspaceName}/wmslayers, /rest/workspaces/{workspaceName}/wmsstores/{storeName}/wmslayers], consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.CoverageStoreFileController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/geoserver/rest/catalog/AbstractStoreUploadController$UploadMethod;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "coverageStorePut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/{method}.{format}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.CoverageStoreInfo> org.geoserver.rest.catalog.CoverageStoreFileController.coverageStorePut(java.lang.String,java.lang.String,org.geoserver.rest.catalog.AbstractStoreUploadController$UploadMethod,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.io.IOException",
                                          "predicate": "{PUT /rest/workspaces/{workspaceName}/coveragestores/{storeName}/{method}.{format}, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.CoverageStoreFileController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/geoserver/rest/catalog/AbstractStoreUploadController$UploadMethod;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)V",
                                                  "name": "coverageStorePost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/{method}.{format}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.CoverageStoreFileController.coverageStorePost(java.lang.String,java.lang.String,org.geoserver.rest.catalog.AbstractStoreUploadController$UploadMethod,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.io.IOException",
                                          "predicate": "{POST /rest/workspaces/{workspaceName}/coveragestores/{storeName}/{method}.{format}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.TemplateController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;)V",
                                                  "name": "templateGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/templates/{templateName}",
                                                      "/rest/workspaces/{workspaceName}/templates/{templateName}",
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}/templates/{templateName}",
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes/{featureTypeName}/templates/{templateName}",
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/templates/{templateName}",
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{featureTypeName}/templates/{templateName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/plain",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.TemplateController.templateGet(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse)",
                                          "predicate": "{GET [/rest/templates/{templateName}, /rest/workspaces/{workspaceName}/templates/{templateName}, /rest/workspaces/{workspaceName}/datastores/{storeName}/templates/{templateName}, /rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes/{featureTypeName}/templates/{templateName}, /rest/workspaces/{workspaceName}/coveragestores/{storeName}/templates/{templateName}, /rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{featureTypeName}/templates/{templateName}], produces [text/plain]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.TemplateController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)V",
                                                  "name": "templatePut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "text/plain",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/templates/{templateName}",
                                                      "/rest/workspaces/{workspaceName}/templates/{templateName}",
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}/templates/{templateName}",
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes/{featureTypeName}/templates/{templateName}",
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/templates/{templateName}",
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{featureTypeName}/templates/{templateName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.TemplateController.templatePut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)",
                                          "predicate": "{PUT [/rest/templates/{templateName}, /rest/workspaces/{workspaceName}/templates/{templateName}, /rest/workspaces/{workspaceName}/datastores/{storeName}/templates/{templateName}, /rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes/{featureTypeName}/templates/{templateName}, /rest/workspaces/{workspaceName}/coveragestores/{storeName}/templates/{templateName}, /rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{featureTypeName}/templates/{templateName}], consumes [text/plain]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.TemplateController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "templatesGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/templates",
                                                      "/rest/workspaces/{workspaceName}/templates",
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}/templates",
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes/{featureTypeName}/templates",
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/templates",
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{featureTypeName}/templates"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.rest.catalog.TemplateInfo> org.geoserver.rest.catalog.TemplateController.templatesGet(java.lang.String,java.lang.String,java.lang.String)",
                                          "predicate": "{GET [/rest/templates, /rest/workspaces/{workspaceName}/templates, /rest/workspaces/{workspaceName}/datastores/{storeName}/templates, /rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes/{featureTypeName}/templates, /rest/workspaces/{workspaceName}/coveragestores/{storeName}/templates, /rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{featureTypeName}/templates], produces [text/html || application/json || application/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.TemplateController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "templateDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/templates/{templateName}",
                                                      "/rest/workspaces/{workspaceName}/templates/{templateName}",
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}/templates/{templateName}",
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes/{featureTypeName}/templates/{templateName}",
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/templates/{templateName}",
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{featureTypeName}/templates/{templateName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.TemplateController.templateDelete(javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
                                          "predicate": "{DELETE [/rest/templates/{templateName}, /rest/workspaces/{workspaceName}/templates/{templateName}, /rest/workspaces/{workspaceName}/datastores/{storeName}/templates/{templateName}, /rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes/{featureTypeName}/templates/{templateName}, /rest/workspaces/{workspaceName}/coveragestores/{storeName}/templates/{templateName}, /rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{featureTypeName}/templates/{templateName}]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.FeatureTypeController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;",
                                                  "name": "featureTypesGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/featuretypes",
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public java.lang.Object org.geoserver.rest.catalog.FeatureTypeController.featureTypesGet(java.lang.String,java.lang.String,java.lang.String)",
                                          "predicate": "{GET [/rest/workspaces/{workspaceName}/featuretypes, /rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes], produces [text/html || application/json || application/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.FeatureTypeController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/geoserver/catalog/FeatureTypeInfo;Lorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "featureTypePost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/featuretypes",
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(java.lang.String,java.lang.String,org.geoserver.catalog.FeatureTypeInfo,org.springframework.web.util.UriComponentsBuilder) throws java.lang.Exception",
                                          "predicate": "{POST [/rest/workspaces/{workspaceName}/featuretypes, /rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes], consumes [text/json || application/json || text/xml || application/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.FeatureTypeController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "featureTypeGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/featuretypes/{featureTypeName}",
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes/{featureTypeName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper org.geoserver.rest.catalog.FeatureTypeController.featureTypeGet(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)",
                                          "predicate": "{GET [/rest/workspaces/{workspaceName}/featuretypes/{featureTypeName}, /rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes/{featureTypeName}], produces [text/html || application/json || application/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.FeatureTypeController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/geoserver/catalog/FeatureTypeInfo;Ljava/lang/String;)V",
                                                  "name": "featureTypePut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/featuretypes/{featureTypeName}",
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes/{featureTypeName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.FeatureTypeController.featureTypePut(java.lang.String,java.lang.String,java.lang.String,org.geoserver.catalog.FeatureTypeInfo,java.lang.String)",
                                          "predicate": "{PUT [/rest/workspaces/{workspaceName}/featuretypes/{featureTypeName}, /rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes/{featureTypeName}], produces [text/html || application/json || application/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.FeatureTypeController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;)V",
                                                  "name": "featureTypeDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/featuretypes/{featureTypeName}",
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes/{featureTypeName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.FeatureTypeController.featureTypeDelete(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)",
                                          "predicate": "{DELETE [/rest/workspaces/{workspaceName}/featuretypes/{featureTypeName}, /rest/workspaces/{workspaceName}/datastores/{storeName}/featuretypes/{featureTypeName}], produces [text/html || application/json || application/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMSStoreController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "wmsStoreGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmsstores/{storeName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.WMSStoreInfo> org.geoserver.rest.catalog.WMSStoreController.wmsStoreGet(java.lang.String,java.lang.String)",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/wmsstores/{storeName}, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMSStoreController",
                                                  "descriptor": "(Lorg/geoserver/catalog/WMSStoreInfo;Ljava/lang/String;Lorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "wmsStorePost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmsstores"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<java.lang.String> org.geoserver.rest.catalog.WMSStoreController.wmsStorePost(org.geoserver.catalog.WMSStoreInfo,java.lang.String,org.springframework.web.util.UriComponentsBuilder)",
                                          "predicate": "{POST /rest/workspaces/{workspaceName}/wmsstores, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMSStoreController",
                                                  "descriptor": "(Lorg/geoserver/catalog/WMSStoreInfo;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "wmsStorePut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmsstores/{storeName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.WMSStoreController.wmsStorePut(org.geoserver.catalog.WMSStoreInfo,java.lang.String,java.lang.String)",
                                          "predicate": "{PUT /rest/workspaces/{workspaceName}/wmsstores/{storeName}, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMSStoreController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Z)V",
                                                  "name": "wmsStoreDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmsstores/{storeName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.WMSStoreController.wmsStoreDelete(java.lang.String,java.lang.String,boolean) throws java.io.IOException",
                                          "predicate": "{DELETE /rest/workspaces/{workspaceName}/wmsstores/{storeName}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMSStoreController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "wmsStoresGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmsstores"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.WMSStoreInfo> org.geoserver.rest.catalog.WMSStoreController.wmsStoresGet(java.lang.String)",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/wmsstores, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.AboutStatusController",
                                                  "descriptor": "()Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "statusGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/about/status"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "protected org.geoserver.rest.wrapper.RestWrapper<org.geoserver.platform.ModuleStatus> org.geoserver.rest.catalog.AboutStatusController.statusGet() throws java.lang.Exception",
                                          "predicate": "{GET /rest/about/status, produces [text/html || application/json || application/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.AboutStatusController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "statusGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/about/status/{target}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "protected org.geoserver.rest.wrapper.RestWrapper<org.geoserver.platform.ModuleStatus> org.geoserver.rest.catalog.AboutStatusController.statusGet(java.lang.String) throws java.lang.Exception",
                                          "predicate": "{GET /rest/about/status/{target}, produces [text/html || application/json || application/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.LayerGroupController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "getLayerGroups"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/layergroups",
                                                      "/rest/workspaces/{workspaceName}/layergroups"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<?> org.geoserver.rest.catalog.LayerGroupController.getLayerGroups(java.lang.String)",
                                          "predicate": "{GET [/rest/layergroups, /rest/workspaces/{workspaceName}/layergroups], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.LayerGroupController",
                                                  "descriptor": "(Lorg/geoserver/catalog/LayerGroupInfo;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "layerGroupPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/layergroups/{layerGroupName}",
                                                      "/rest/workspaces/{workspaceName}/layergroups/{layerGroupName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.LayerGroupController.layerGroupPut(org.geoserver.catalog.LayerGroupInfo,java.lang.String,java.lang.String) throws java.lang.Exception",
                                          "predicate": "{PUT [/rest/layergroups/{layerGroupName}, /rest/workspaces/{workspaceName}/layergroups/{layerGroupName}], consumes [application/json || text/json || application/xml || text/xml], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.LayerGroupController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "layerGroupDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/layergroups/{layerGroupName}",
                                                      "/rest/workspaces/{workspaceName}/layergroups/{layerGroupName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.LayerGroupController.layerGroupDelete(java.lang.String,java.lang.String)",
                                          "predicate": "{DELETE [/rest/layergroups/{layerGroupName}, /rest/workspaces/{workspaceName}/layergroups/{layerGroupName}], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.LayerGroupController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "getLayerGroup"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/layergroups/{layerGroupName}",
                                                      "/rest/workspaces/{workspaceName}/layergroups/{layerGroupName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<?> org.geoserver.rest.catalog.LayerGroupController.getLayerGroup(java.lang.String,java.lang.String)",
                                          "predicate": "{GET [/rest/layergroups/{layerGroupName}, /rest/workspaces/{workspaceName}/layergroups/{layerGroupName}], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.LayerGroupController",
                                                  "descriptor": "(Lorg/geoserver/catalog/LayerGroupInfo;Ljava/lang/String;Lorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "layerGroupPost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/layergroups",
                                                      "/rest/workspaces/{workspaceName}/layergroups"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<java.lang.String> org.geoserver.rest.catalog.LayerGroupController.layerGroupPost(org.geoserver.catalog.LayerGroupInfo,java.lang.String,org.springframework.web.util.UriComponentsBuilder) throws java.lang.Exception",
                                          "predicate": "{POST [/rest/layergroups, /rest/workspaces/{workspaceName}/layergroups], consumes [application/json || text/json || application/xml || text/xml], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.LayerController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "layersGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/layers",
                                                      "/rest/workspaces/{workspaceName}/layers"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.LayerInfo> org.geoserver.rest.catalog.LayerController.layersGet(java.lang.String)",
                                          "predicate": "{GET [/rest/layers, /rest/workspaces/{workspaceName}/layers], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.LayerController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "layerGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/layers/{layerName}",
                                                      "/rest/workspaces/{workspaceName}/layers/{layerName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.LayerInfo> org.geoserver.rest.catalog.LayerController.layerGet(java.lang.String,java.lang.String)",
                                          "predicate": "{GET [/rest/layers/{layerName}, /rest/workspaces/{workspaceName}/layers/{layerName}], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.LayerController",
                                                  "descriptor": "(Lorg/geoserver/catalog/LayerInfo;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "layerPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/layers/{layerName}",
                                                      "/rest/workspaces/{workspaceName}/layers/{layerName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.LayerController.layerPut(org.geoserver.catalog.LayerInfo,java.lang.String,java.lang.String)",
                                          "predicate": "{PUT [/rest/layers/{layerName}, /rest/workspaces/{workspaceName}/layers/{layerName}]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.LayerController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Z)V",
                                                  "name": "layerDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/layers/{layerName}",
                                                      "/rest/workspaces/{workspaceName}/layers/{layerName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.LayerController.layerDelete(java.lang.String,java.lang.String,boolean) throws java.io.IOException",
                                          "predicate": "{DELETE [/rest/layers/{layerName}, /rest/workspaces/{workspaceName}/layers/{layerName}]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.CoverageStoreController",
                                                  "descriptor": "(Lorg/geoserver/catalog/CoverageStoreInfo;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "coverageStorePut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.CoverageStoreController.coverageStorePut(org.geoserver.catalog.CoverageStoreInfo,java.lang.String,java.lang.String)",
                                          "predicate": "{PUT /rest/workspaces/{workspaceName}/coveragestores/{storeName}, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.CoverageStoreController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "coverageStoreGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.CoverageStoreInfo> org.geoserver.rest.catalog.CoverageStoreController.coverageStoreGet(java.lang.String,java.lang.String)",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/coveragestores/{storeName}, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.CoverageStoreController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V",
                                                  "name": "coverageStoreDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.CoverageStoreController.coverageStoreDelete(java.lang.String,java.lang.String,boolean,java.lang.String) throws java.io.IOException",
                                          "predicate": "{DELETE /rest/workspaces/{workspaceName}/coveragestores/{storeName}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.CoverageStoreController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "coverageStoresGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coveragestores"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.CoverageStoreInfo> org.geoserver.rest.catalog.CoverageStoreController.coverageStoresGet(java.lang.String)",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/coveragestores, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.CoverageStoreController",
                                                  "descriptor": "(Lorg/geoserver/catalog/CoverageStoreInfo;Ljava/lang/String;Lorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "coverageStorePost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coveragestores"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<java.lang.String> org.geoserver.rest.catalog.CoverageStoreController.coverageStorePost(org.geoserver.catalog.CoverageStoreInfo,java.lang.String,org.springframework.web.util.UriComponentsBuilder)",
                                          "predicate": "{POST /rest/workspaces/{workspaceName}/coveragestores, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.CoverageController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "coverageGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coverages/{coverageName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.CoverageInfo> org.geoserver.rest.catalog.CoverageController.coverageGet(java.lang.String,java.lang.String)",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/coverages/{coverageName}, produces [text/xml || application/xml || application/json || text/html || text/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.CoverageController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "coverageGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.CoverageInfo> org.geoserver.rest.catalog.CoverageController.coverageGet(java.lang.String,java.lang.String,java.lang.String)",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}, produces [text/xml || application/xml || application/json || text/html || text/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.CoverageController",
                                                  "descriptor": "(Lorg/geoserver/catalog/CoverageInfo;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "coveragePost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coverages",
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<java.lang.String> org.geoserver.rest.catalog.CoverageController.coveragePost(org.geoserver.catalog.CoverageInfo,java.lang.String,java.lang.String,org.springframework.web.util.UriComponentsBuilder) throws java.lang.Exception",
                                          "predicate": "{POST [/rest/workspaces/{workspaceName}/coverages, /rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages], consumes [text/xml || application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.CoverageController",
                                                  "descriptor": "(Lorg/geoserver/catalog/CoverageInfo;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "coveragePut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.CoverageController.coveragePut(org.geoserver.catalog.CoverageInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception",
                                          "predicate": "{PUT /rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}, consumes [text/xml || application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.CoverageController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V",
                                                  "name": "coverageDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "protected void org.geoserver.rest.catalog.CoverageController.coverageDelete(java.lang.String,java.lang.String,java.lang.String,boolean)",
                                          "predicate": "{DELETE /rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.CoverageController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;",
                                                  "name": "coveragesGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coverages"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public java.lang.Object org.geoserver.rest.catalog.CoverageController.coveragesGet(java.lang.String,java.lang.String)",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/coverages, produces [text/xml || application/xml || application/json || text/html || text/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.CoverageController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;",
                                                  "name": "coveragesGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public java.lang.Object org.geoserver.rest.catalog.CoverageController.coveragesGet(java.lang.String,java.lang.String,java.lang.String)",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages, produces [text/xml || application/xml || application/json || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.StructuredCoverageController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)Lorg/geotools/data/simple/SimpleFeatureCollection;",
                                                  "name": "granulesGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}/index/granules"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geotools.data.simple.SimpleFeatureCollection org.geoserver.rest.catalog.StructuredCoverageController.granulesGet(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer) throws java.io.IOException",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}/index/granules, produces [application/xml || text/xml || application/json || text/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.StructuredCoverageController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "granulesDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}/index/granules"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.StructuredCoverageController.granulesDelete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{DELETE /rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}/index/granules}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.StructuredCoverageController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/catalog/FormatCollectionWrapper;",
                                                  "name": "granuleGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}/index/granules/{granuleId:.+}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.catalog.FormatCollectionWrapper org.geoserver.rest.catalog.StructuredCoverageController.granuleGet(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}/index/granules/{granuleId:.+}, produces [application/xml || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.StructuredCoverageController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "granuleDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}/index/granules/{granuleId:.+}",
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}/index/granules/{granuleId:.+}/{format}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.StructuredCoverageController.granuleDelete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{DELETE [/rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}/index/granules/{granuleId:.+}, /rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}/index/granules/{granuleId:.+}/{format}]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.StructuredCoverageController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "indexGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}/index"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.rest.catalog.StructuredCoverageController$IndexSchema> org.geoserver.rest.catalog.StructuredCoverageController.indexGet(java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/coveragestores/{storeName}/coverages/{coverageName}/index, produces [application/xml || application/json || text/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.AboutController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "versionGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/about/version"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.ManifestLoader$AboutModel> org.geoserver.rest.catalog.AboutController.versionGet(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
                                          "predicate": "{GET /rest/about/version, produces [text/html || application/json || application/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.AboutController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "manifestGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/about/manifest"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.ManifestLoader$AboutModel> org.geoserver.rest.catalog.AboutController.manifestGet(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
                                          "predicate": "{GET /rest/about/manifest, produces [text/html || application/json || application/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMTSLayerController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Ljava/lang/Object;",
                                                  "name": "layersGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmtslayers",
                                                      "/rest/workspaces/{workspaceName}/wmtsstores/{storeName}/layers"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public java.lang.Object org.geoserver.rest.catalog.WMTSLayerController.layersGet(java.lang.String,java.lang.String,boolean,java.lang.String)",
                                          "predicate": "{GET [/rest/workspaces/{workspaceName}/wmtslayers, /rest/workspaces/{workspaceName}/wmtsstores/{storeName}/layers], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMTSLayerController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "layerGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmtslayers/{layerName}",
                                                      "/rest/workspaces/{workspaceName}/wmtsstores/{storeName}/layers/{layerName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.WMTSLayerInfo> org.geoserver.rest.catalog.WMTSLayerController.layerGet(java.lang.String,java.lang.String,java.lang.String)",
                                          "predicate": "{GET [/rest/workspaces/{workspaceName}/wmtslayers/{layerName}, /rest/workspaces/{workspaceName}/wmtsstores/{storeName}/layers/{layerName}], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMTSLayerController",
                                                  "descriptor": "(Lorg/geoserver/catalog/WMTSLayerInfo;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "layerPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmtslayers/{layerName}",
                                                      "/rest/workspaces/{workspaceName}/wmtsstores/{storeName}/layers/{layerName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.WMTSLayerController.layerPut(org.geoserver.catalog.WMTSLayerInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
                                          "predicate": "{PUT [/rest/workspaces/{workspaceName}/wmtslayers/{layerName}, /rest/workspaces/{workspaceName}/wmtsstores/{storeName}/layers/{layerName}], consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMTSLayerController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V",
                                                  "name": "layerDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmtslayers/{layerName}",
                                                      "/rest/workspaces/{workspaceName}/wmtsstores/{storeName}/layers/{layerName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.WMTSLayerController.layerDelete(java.lang.String,java.lang.String,java.lang.String,boolean)",
                                          "predicate": "{DELETE [/rest/workspaces/{workspaceName}/wmtslayers/{layerName}, /rest/workspaces/{workspaceName}/wmtsstores/{storeName}/layers/{layerName}]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMTSLayerController",
                                                  "descriptor": "(Lorg/geoserver/catalog/WMTSLayerInfo;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "layerPost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmtslayers",
                                                      "/rest/workspaces/{workspaceName}/wmtsstores/{storeName}/layers"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<java.lang.String> org.geoserver.rest.catalog.WMTSLayerController.layerPost(org.geoserver.catalog.WMTSLayerInfo,java.lang.String,java.lang.String,org.springframework.web.util.UriComponentsBuilder) throws java.lang.Exception",
                                          "predicate": "{POST [/rest/workspaces/{workspaceName}/wmtslayers, /rest/workspaces/{workspaceName}/wmtsstores/{storeName}/layers], consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.DataStoreController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "dataStoreGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.DataStoreInfo> org.geoserver.rest.catalog.DataStoreController.dataStoreGet(java.lang.String,java.lang.String)",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/datastores/{storeName}, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.DataStoreController",
                                                  "descriptor": "(Lorg/geoserver/catalog/DataStoreInfo;Ljava/lang/String;Lorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "dataStorePost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/datastores"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<java.lang.String> org.geoserver.rest.catalog.DataStoreController.dataStorePost(org.geoserver.catalog.DataStoreInfo,java.lang.String,org.springframework.web.util.UriComponentsBuilder)",
                                          "predicate": "{POST /rest/workspaces/{workspaceName}/datastores, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.DataStoreController",
                                                  "descriptor": "(Lorg/geoserver/catalog/DataStoreInfo;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "dataStorePut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.DataStoreController.dataStorePut(org.geoserver.catalog.DataStoreInfo,java.lang.String,java.lang.String)",
                                          "predicate": "{PUT /rest/workspaces/{workspaceName}/datastores/{storeName}, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.DataStoreController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V",
                                                  "name": "dataStoreDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.DataStoreController.dataStoreDelete(java.lang.String,java.lang.String,boolean,java.lang.String) throws java.io.IOException",
                                          "predicate": "{DELETE /rest/workspaces/{workspaceName}/datastores/{storeName}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.DataStoreController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "dataStoresGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/datastores"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.DataStoreInfo> org.geoserver.rest.catalog.DataStoreController.dataStoresGet(java.lang.String)",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/datastores, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.StyleController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "stylesGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/styles",
                                                      "/rest/layers/{layerName}/styles",
                                                      "/rest/workspaces/{workspaceName}/styles"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<?> org.geoserver.rest.catalog.StyleController.stylesGet(java.lang.String,java.lang.String)",
                                          "predicate": "{GET [/rest/styles, /rest/layers/{layerName}/styles, /rest/workspaces/{workspaceName}/styles], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.StyleController",
                                                  "descriptor": "(Lorg/geoserver/catalog/StyleInfo;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;",
                                                  "name": "stylePost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/styles",
                                                      "/rest/layers/{layerName}/styles",
                                                      "/rest/workspaces/{workspaceName}/styles"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public java.lang.String org.geoserver.rest.catalog.StyleController.stylePost(org.geoserver.catalog.StyleInfo,java.lang.String,java.lang.String,boolean)",
                                          "predicate": "{POST [/rest/styles, /rest/layers/{layerName}/styles, /rest/workspaces/{workspaceName}/styles], consumes [text/xml || application/xml || application/json || text/json], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.StyleController",
                                                  "descriptor": "(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "stylePost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/zip",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/styles",
                                                      "/rest/workspaces/{workspaceName}/styles"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<java.lang.String> org.geoserver.rest.catalog.StyleController.stylePost(java.io.InputStream,java.lang.String,java.lang.String,org.springframework.web.util.UriComponentsBuilder) throws java.io.IOException",
                                          "predicate": "{POST [/rest/styles, /rest/workspaces/{workspaceName}/styles], consumes [application/zip], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.StyleController",
                                                  "descriptor": "(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "styleSLDPost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "*/*",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/styles",
                                                      "/rest/workspaces/{workspaceName}/styles"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<java.lang.String> org.geoserver.rest.catalog.StyleController.styleSLDPost(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String,boolean,org.springframework.web.util.UriComponentsBuilder) throws java.io.IOException",
                                          "predicate": "{POST [/rest/styles, /rest/workspaces/{workspaceName}/styles], consumes [*/*], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.StyleController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "styleGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/styles/{styleName}",
                                                      "/rest/workspaces/{workspaceName}/styles/{styleName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "*/*",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "protected org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.StyleInfo> org.geoserver.rest.catalog.StyleController.styleGet(java.lang.String,java.lang.String)",
                                          "predicate": "{GET [/rest/styles/{styleName}, /rest/workspaces/{workspaceName}/styles/{styleName}], produces [*/*]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.StyleController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/catalog/StyleInfo;",
                                                  "name": "styleSLDGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/styles/{styleName}",
                                                      "/rest/workspaces/{workspaceName}/styles/{styleName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.ogc.sld+xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/vnd.ogc.se+xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "protected org.geoserver.catalog.StyleInfo org.geoserver.rest.catalog.StyleController.styleSLDGet(java.lang.String,java.lang.String)",
                                          "predicate": "{GET [/rest/styles/{styleName}, /rest/workspaces/{workspaceName}/styles/{styleName}], produces [application/vnd.ogc.sld+xml || application/vnd.ogc.se+xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.StyleController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;ZZ)V",
                                                  "name": "styleDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/styles/{styleName}",
                                                      "/rest/workspaces/{workspaceName}/styles/{styleName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "protected void org.geoserver.rest.catalog.StyleController.styleDelete(java.lang.String,java.lang.String,boolean,boolean) throws java.io.IOException",
                                          "predicate": "{DELETE [/rest/styles/{styleName}, /rest/workspaces/{workspaceName}/styles/{styleName}], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.StyleController",
                                                  "descriptor": "(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "styleZipPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/zip",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/styles/{styleName}",
                                                      "/rest/workspaces/{workspaceName}/styles/{styleName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.StyleController.styleZipPut(java.io.InputStream,java.lang.String,java.lang.String)",
                                          "predicate": "{PUT [/rest/styles/{styleName}, /rest/workspaces/{workspaceName}/styles/{styleName}], consumes [application/zip], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.StyleController",
                                                  "descriptor": "(Lorg/geoserver/catalog/StyleInfo;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "stylePut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/styles/{styleName}",
                                                      "/rest/workspaces/{workspaceName}/styles/{styleName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.StyleController.stylePut(org.geoserver.catalog.StyleInfo,java.lang.String,java.lang.String)",
                                          "predicate": "{PUT [/rest/styles/{styleName}, /rest/workspaces/{workspaceName}/styles/{styleName}], consumes [text/xml || application/xml || application/json || text/json], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.StyleController",
                                                  "descriptor": "(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V",
                                                  "name": "stylePut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "*/*",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/styles/{styleName}",
                                                      "/rest/workspaces/{workspaceName}/styles/{styleName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.StyleController.stylePut(java.io.InputStream,java.lang.String,java.lang.String,boolean,java.lang.String) throws java.io.IOException",
                                          "predicate": "{PUT [/rest/styles/{styleName}, /rest/workspaces/{workspaceName}/styles/{styleName}], consumes [*/*], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.NamespaceController",
                                                  "descriptor": "()Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "getNamespaces"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/namespaces"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper org.geoserver.rest.catalog.NamespaceController.getNamespaces()",
                                          "predicate": "{GET /rest/namespaces, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.NamespaceController",
                                                  "descriptor": "(Lorg/geoserver/catalog/NamespaceInfo;Lorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "namespacePost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/namespaces"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<java.lang.String> org.geoserver.rest.catalog.NamespaceController.namespacePost(org.geoserver.catalog.NamespaceInfo,org.springframework.web.util.UriComponentsBuilder)",
                                          "predicate": "{POST /rest/namespaces, consumes [text/xml || application/xml || text/json || application/json], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.NamespaceController",
                                                  "descriptor": "(Lorg/geoserver/catalog/NamespaceInfo;Ljava/lang/String;Lorg/springframework/web/util/UriComponentsBuilder;)V",
                                                  "name": "namespacePut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/namespaces/{prefix}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.NamespaceController.namespacePut(org.geoserver.catalog.NamespaceInfo,java.lang.String,org.springframework.web.util.UriComponentsBuilder)",
                                          "predicate": "{PUT /rest/namespaces/{prefix}, consumes [text/xml || application/xml || text/json || application/json], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.NamespaceController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "namespaceDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/namespaces/{prefix}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "protected void org.geoserver.rest.catalog.NamespaceController.namespaceDelete(java.lang.String)",
                                          "predicate": "{DELETE /rest/namespaces/{prefix}, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.NamespaceController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "namespaceGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/namespaces/{namespaceName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.NamespaceInfo> org.geoserver.rest.catalog.NamespaceController.namespaceGet(java.lang.String)",
                                          "predicate": "{GET /rest/namespaces/{namespaceName}, produces [application/json || text/html || application/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMTSStoreController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "getStores"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmtsstores"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.WMTSStoreInfo> org.geoserver.rest.catalog.WMTSStoreController.getStores(java.lang.String)",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/wmtsstores, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMTSStoreController",
                                                  "descriptor": "(Lorg/geoserver/catalog/WMTSStoreInfo;Ljava/lang/String;Lorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "postStore"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmtsstores"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<java.lang.String> org.geoserver.rest.catalog.WMTSStoreController.postStore(org.geoserver.catalog.WMTSStoreInfo,java.lang.String,org.springframework.web.util.UriComponentsBuilder)",
                                          "predicate": "{POST /rest/workspaces/{workspaceName}/wmtsstores, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMTSStoreController",
                                                  "descriptor": "(Lorg/geoserver/catalog/WMTSStoreInfo;Ljava/lang/String;Ljava/lang/String;)V",
                                                  "name": "putStore"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmtsstores/{storeName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.WMTSStoreController.putStore(org.geoserver.catalog.WMTSStoreInfo,java.lang.String,java.lang.String)",
                                          "predicate": "{PUT /rest/workspaces/{workspaceName}/wmtsstores/{storeName}, consumes [application/json || text/json || application/xml || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMTSStoreController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Z)V",
                                                  "name": "deleteStore"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmtsstores/{storeName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.WMTSStoreController.deleteStore(java.lang.String,java.lang.String,boolean) throws java.io.IOException",
                                          "predicate": "{DELETE /rest/workspaces/{workspaceName}/wmtsstores/{storeName}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.WMTSStoreController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "getStore"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/wmtsstores/{storeName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper<org.geoserver.catalog.WMTSStoreInfo> org.geoserver.rest.catalog.WMTSStoreController.getStore(java.lang.String,java.lang.String)",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/wmtsstores/{storeName}, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.DataStoreFileController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/geoserver/rest/catalog/AbstractStoreUploadController$UploadMethod;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V",
                                                  "name": "dataStorePut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}/{method}.{format}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.catalog.DataStoreFileController.dataStorePut(java.lang.String,java.lang.String,org.geoserver.rest.catalog.AbstractStoreUploadController$UploadMethod,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException",
                                          "predicate": "{PUT /rest/workspaces/{workspaceName}/datastores/{storeName}/{method}.{format}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.catalog.DataStoreFileController",
                                                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "dataStoresGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/workspaces/{workspaceName}/datastores/{storeName}/{method}.{format}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity org.geoserver.rest.catalog.DataStoreFileController.dataStoresGet(java.lang.String,java.lang.String) throws java.io.IOException",
                                          "predicate": "{GET /rest/workspaces/{workspaceName}/datastores/{storeName}/{method}.{format}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.CatalogReloadController",
                                                  "descriptor": "()V",
                                                  "name": "reload"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST",
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/reload"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.CatalogReloadController.reload() throws java.lang.Exception",
                                          "predicate": "{[POST, PUT] /rest/reload}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.CatalogReloadController",
                                                  "descriptor": "()V",
                                                  "name": "reset"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST",
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/reset"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.CatalogReloadController.reset()",
                                          "predicate": "{[POST, PUT] /rest/reset}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.service.WFSSettingsController",
                                                  "descriptor": "(Lorg/geoserver/wfs/WFSInfo;Ljava/lang/String;)V",
                                                  "name": "serviceSettingsPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/services/wfs/settings",
                                                      "/rest/services/wfs/workspaces/{workspaceName}/settings"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.service.WFSSettingsController.serviceSettingsPut(org.geoserver.wfs.WFSInfo,java.lang.String)",
                                          "predicate": "{PUT [/rest/services/wfs/settings, /rest/services/wfs/workspaces/{workspaceName}/settings], consumes [application/json || text/json || application/xml || text/xml], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.service.ServiceSettingsController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "serviceSettingsGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/services/wfs/settings",
                                                      "/rest/services/wfs/workspaces/{workspaceName}/settings"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper org.geoserver.rest.service.ServiceSettingsController.serviceSettingsGet(java.lang.String)",
                                          "predicate": "{GET [/rest/services/wfs/settings, /rest/services/wfs/workspaces/{workspaceName}/settings], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.service.ServiceSettingsController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "serviceDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/services/wfs/workspaces/{workspaceName}/settings"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.service.ServiceSettingsController.serviceDelete(java.lang.String)",
                                          "predicate": "{DELETE /rest/services/wfs/workspaces/{workspaceName}/settings, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.service.WCSSettingsController",
                                                  "descriptor": "(Lorg/geoserver/wcs/WCSInfo;Ljava/lang/String;)V",
                                                  "name": "serviceSettingsPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/services/wcs/settings",
                                                      "/rest/services/wcs/workspaces/{workspaceName}/settings"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.service.WCSSettingsController.serviceSettingsPut(org.geoserver.wcs.WCSInfo,java.lang.String)",
                                          "predicate": "{PUT [/rest/services/wcs/settings, /rest/services/wcs/workspaces/{workspaceName}/settings], consumes [application/json || text/json || application/xml || text/xml], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.service.ServiceSettingsController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "serviceSettingsGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/services/wcs/settings",
                                                      "/rest/services/wcs/workspaces/{workspaceName}/settings"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper org.geoserver.rest.service.ServiceSettingsController.serviceSettingsGet(java.lang.String)",
                                          "predicate": "{GET [/rest/services/wcs/settings, /rest/services/wcs/workspaces/{workspaceName}/settings], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.service.ServiceSettingsController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "serviceDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/services/wcs/workspaces/{workspaceName}/settings"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.service.ServiceSettingsController.serviceDelete(java.lang.String)",
                                          "predicate": "{DELETE /rest/services/wcs/workspaces/{workspaceName}/settings, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.service.WMSSettingsController",
                                                  "descriptor": "(Lorg/geoserver/wms/WMSInfo;Ljava/lang/String;)V",
                                                  "name": "serviceSettingsPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/services/wms/settings",
                                                      "/rest/services/wms/workspaces/{workspaceName}/settings"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.service.WMSSettingsController.serviceSettingsPut(org.geoserver.wms.WMSInfo,java.lang.String)",
                                          "predicate": "{PUT [/rest/services/wms/settings, /rest/services/wms/workspaces/{workspaceName}/settings], consumes [application/json || text/json || application/xml || text/xml], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.service.ServiceSettingsController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geoserver/rest/wrapper/RestWrapper;",
                                                  "name": "serviceSettingsGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/services/wms/settings",
                                                      "/rest/services/wms/workspaces/{workspaceName}/settings"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geoserver.rest.wrapper.RestWrapper org.geoserver.rest.service.ServiceSettingsController.serviceSettingsGet(java.lang.String)",
                                          "predicate": "{GET [/rest/services/wms/settings, /rest/services/wms/workspaces/{workspaceName}/settings], produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geoserver.rest.service.ServiceSettingsController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "serviceDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/services/wms/workspaces/{workspaceName}/settings"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public void org.geoserver.rest.service.ServiceSettingsController.serviceDelete(java.lang.String)",
                                          "predicate": "{DELETE /rest/services/wms/workspaces/{workspaceName}/settings, produces [application/json || application/xml || text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.FilterUpdateController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "doPost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/filter/{filterName}/update/{updateType}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.FilterUpdateController.doPost(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)",
                                          "predicate": "{POST /gwc/rest/filter/{filterName}/update/{updateType}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.SeedController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "doGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/seed.json"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.SeedController.doGet(javax.servlet.http.HttpServletRequest)",
                                          "predicate": "{GET /gwc/rest/seed.json}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.SeedController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "doGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/seed/{layer}.json"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.SeedController.doGet(javax.servlet.http.HttpServletRequest,java.lang.String)",
                                          "predicate": "{GET /gwc/rest/seed/{layer}.json}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.SeedController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "doPost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/seed"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity org.geowebcache.rest.controller.SeedController.doPost(javax.servlet.http.HttpServletRequest)",
                                          "predicate": "{POST /gwc/rest/seed}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.SeedController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/io/InputStream;Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "doPost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/seed/{layer:.+}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.SeedController.doPost(javax.servlet.http.HttpServletRequest,java.io.InputStream,java.lang.String,java.util.Map<java.lang.String, java.lang.String>)",
                                          "predicate": "{POST /gwc/rest/seed/{layer:.+}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.SeedController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "doFormGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/seed/{layer}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.SeedController.doFormGet(javax.servlet.http.HttpServletRequest,java.lang.String)",
                                          "predicate": "{GET /gwc/rest/seed/{layer}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.TileLayerController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "doDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/layers/{layer}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.TileLayerController.doDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws org.geowebcache.GeoWebCacheException,org.geowebcache.rest.exception.RestException,java.io.IOException",
                                          "predicate": "{DELETE /gwc/rest/layers/{layer}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.TileLayerController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;)Lorg/geowebcache/rest/converter/XStreamListAliasWrapper;",
                                                  "name": "layersGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/layers"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.geowebcache.rest.converter.XStreamListAliasWrapper org.geowebcache.rest.controller.TileLayerController.layersGet(javax.servlet.http.HttpServletRequest)",
                                          "predicate": "{GET /gwc/rest/layers}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.TileLayerController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geowebcache/layer/TileLayer;",
                                                  "name": "layerGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/layers/{layer}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.geowebcache.layer.TileLayer org.geowebcache.rest.controller.TileLayerController.layerGet(java.lang.String)",
                                          "predicate": "{GET /gwc/rest/layers/{layer}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.TileLayerController",
                                                  "descriptor": "(Lorg/geowebcache/layer/TileLayer;Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "layerPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/layers/{layerName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.TileLayerController.layerPut(org.geowebcache.layer.TileLayer,java.lang.String) throws org.geowebcache.GeoWebCacheException,org.geowebcache.rest.exception.RestException,java.io.IOException",
                                          "predicate": "{PUT /gwc/rest/layers/{layerName}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.TileLayerController",
                                                  "descriptor": "(Lorg/geowebcache/layer/TileLayer;Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "layerPost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/layers/{layerName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.TileLayerController.layerPost(org.geowebcache.layer.TileLayer,java.lang.String) throws org.geowebcache.GeoWebCacheException,org.geowebcache.rest.exception.RestException,java.io.IOException",
                                          "predicate": "{POST /gwc/rest/layers/{layerName}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.GridSetController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "gridSetDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/gridsets/{gridSetName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geowebcache.rest.controller.GridSetController.gridSetDelete(java.lang.String)",
                                          "predicate": "{DELETE /gwc/rest/gridsets/{gridSetName}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.GridSetController",
                                                  "descriptor": "()Lorg/geowebcache/rest/converter/XStreamListAliasWrapper;",
                                                  "name": "gridSetsGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/gridsets"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geowebcache.rest.converter.XStreamListAliasWrapper org.geowebcache.rest.controller.GridSetController.gridSetsGet()",
                                          "predicate": "{GET /gwc/rest/gridsets, produces [application/xml || application/json || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.GridSetController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geowebcache/grid/GridSet;",
                                                  "name": "gridSetGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/gridsets/{gridSetName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geowebcache.grid.GridSet org.geowebcache.rest.controller.GridSetController.gridSetGet(java.lang.String)",
                                          "predicate": "{GET /gwc/rest/gridsets/{gridSetName}, produces [application/xml || application/json || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.GridSetController",
                                                  "descriptor": "(Ljava/lang/String;Lorg/geowebcache/grid/GridSet;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "gridSetPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/gridsets/{gridSetName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.GridSetController.gridSetPut(java.lang.String,org.geowebcache.grid.GridSet)",
                                          "predicate": "{PUT /gwc/rest/gridsets/{gridSetName}, consumes [application/xml || application/json || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.BlobStoreController",
                                                  "descriptor": "(Ljava/lang/String;Lorg/geowebcache/config/BlobStoreInfo;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "blobStorePut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/blobstores/{blobStoreName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.BlobStoreController.blobStorePut(java.lang.String,org.geowebcache.config.BlobStoreInfo)",
                                          "predicate": "{PUT /gwc/rest/blobstores/{blobStoreName}, consumes [application/xml || application/json || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.BlobStoreController",
                                                  "descriptor": "(Ljava/lang/String;)V",
                                                  "name": "blobStoreDelete"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/blobstores/{blobStoreName}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geowebcache.rest.controller.BlobStoreController.blobStoreDelete(java.lang.String)",
                                          "predicate": "{DELETE /gwc/rest/blobstores/{blobStoreName}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.BlobStoreController",
                                                  "descriptor": "()Lorg/geowebcache/rest/converter/XStreamListAliasWrapper;",
                                                  "name": "blobStoresGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/blobstores"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geowebcache.rest.converter.XStreamListAliasWrapper org.geowebcache.rest.controller.BlobStoreController.blobStoresGet()",
                                          "predicate": "{GET /gwc/rest/blobstores, produces [application/xml || application/json || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.BlobStoreController",
                                                  "descriptor": "(Ljava/lang/String;)Lorg/geowebcache/config/BlobStoreInfo;",
                                                  "name": "blobStoreGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/blobstores/{blobStoreName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/xml",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "text/xml",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.geowebcache.config.BlobStoreInfo org.geowebcache.rest.controller.BlobStoreController.blobStoreGet(java.lang.String)",
                                          "predicate": "{GET /gwc/rest/blobstores/{blobStoreName}, produces [application/xml || application/json || text/xml]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.MemoryCacheController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "doGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/statistics"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.MemoryCacheController.doGet(javax.servlet.http.HttpServletRequest)",
                                          "predicate": "{GET /gwc/rest/statistics}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.GWCIndexController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "handleRequestInternal"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.GWCIndexController.handleRequestInternal(javax.servlet.http.HttpServletRequest)",
                                          "predicate": "{GET /gwc/rest, produces [text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.MassTruncateController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "doGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/masstruncate"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.MassTruncateController.doGet(javax.servlet.http.HttpServletRequest)",
                                          "predicate": "{GET /gwc/rest/masstruncate}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.MassTruncateController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "doPost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/masstruncate"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.MassTruncateController.doPost(javax.servlet.http.HttpServletRequest) throws java.io.IOException",
                                          "predicate": "{POST /gwc/rest/masstruncate}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.ReloadController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/io/InputStream;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "doPost"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/reload"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.ReloadController.doPost(javax.servlet.http.HttpServletRequest,java.io.InputStream,java.util.Map<java.lang.String, java.lang.String>) throws org.geowebcache.GeoWebCacheException,org.geowebcache.rest.exception.RestException,java.io.IOException",
                                          "predicate": "{POST /gwc/rest/reload}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.BoundsController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "doGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/bounds/{layer}/{srs}/{type}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.BoundsController.doGet(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)",
                                          "predicate": "{GET /gwc/rest/bounds/{layer}/{srs}/{type}}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.ServerController",
                                                  "descriptor": "()Lorg/geowebcache/config/ServerConfiguration;",
                                                  "name": "serverGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/global"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.geowebcache.config.ServerConfiguration org.geowebcache.rest.controller.ServerController.serverGet() throws java.io.IOException",
                                          "predicate": "{GET /gwc/rest/global}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.ServerController",
                                                  "descriptor": "(Lorg/geowebcache/rest/converter/ServerConfigurationPOJO;)V",
                                                  "name": "serverPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/global"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public void org.geowebcache.rest.controller.ServerController.serverPut(org.geowebcache.rest.converter.ServerConfigurationPOJO) throws java.io.IOException",
                                          "predicate": "{PUT /gwc/rest/global}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.rest.controller.ByteStreamController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "doGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/web/**"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "org.springframework.http.ResponseEntity<?> org.geowebcache.rest.controller.ByteStreamController.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
                                          "predicate": "{GET /gwc/rest/web/**}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.diskquota.rest.controller.DiskQuotaController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "doGet"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/diskquota"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.diskquota.rest.controller.DiskQuotaController.doGet(javax.servlet.http.HttpServletRequest)",
                                          "predicate": "{GET /gwc/rest/diskquota}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.geowebcache.diskquota.rest.controller.DiskQuotaController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "doPut"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "PUT"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/gwc/rest/diskquota"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<?> org.geowebcache.diskquota.rest.controller.DiskQuotaController.doPut(javax.servlet.http.HttpServletRequest)",
                                          "predicate": "{PUT /gwc/rest/diskquota}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;",
                                                  "name": "error"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [],
                                                  "params": [],
                                                  "patterns": [
                                                      "/error"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)",
                                          "predicate": "{ /error}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/web/servlet/ModelAndView;",
                                                  "name": "errorHtml"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [],
                                                  "params": [],
                                                  "patterns": [
                                                      "/error"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "text/html",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
                                          "predicate": "{ /error, produces [text/html]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/auditevents"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'auditevents'",
                                          "predicate": "{GET /rest/manage/auditevents, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/beans"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'beans'",
                                          "predicate": "{GET /rest/manage/beans, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/caches"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'caches'",
                                          "predicate": "{GET /rest/manage/caches, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/caches/{cache}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'caches-cache'",
                                          "predicate": "{DELETE /rest/manage/caches/{cache}, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/caches"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'caches'",
                                          "predicate": "{DELETE /rest/manage/caches}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/caches/{cache}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'caches-cache'",
                                          "predicate": "{GET /rest/manage/caches/{cache}, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/health"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'health'",
                                          "predicate": "{GET /rest/manage/health, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/health/{component}/{instance}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'health-component-instance'",
                                          "predicate": "{GET /rest/manage/health/{component}/{instance}, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/health/{component}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'health-component'",
                                          "predicate": "{GET /rest/manage/health/{component}, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/conditions"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'conditions'",
                                          "predicate": "{GET /rest/manage/conditions, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/configprops"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'configprops'",
                                          "predicate": "{GET /rest/manage/configprops, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/env/{toMatch}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'env-toMatch'",
                                          "predicate": "{GET /rest/manage/env/{toMatch}, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/env"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'env'",
                                          "predicate": "{GET /rest/manage/env, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/env"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'env'",
                                          "predicate": "{POST /rest/manage/env, consumes [application/vnd.spring-boot.actuator.v2+json || application/json], produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "DELETE"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/env"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'env'",
                                          "predicate": "{DELETE /rest/manage/env, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/info"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'info'",
                                          "predicate": "{GET /rest/manage/info, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/loggers"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'loggers'",
                                          "predicate": "{GET /rest/manage/loggers, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/loggers/{name}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'loggers-name'",
                                          "predicate": "{GET /rest/manage/loggers/{name}, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ],
                                                  "headers": [],
                                                  "methods": [
                                                      "POST"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/loggers/{name}"
                                                  ],
                                                  "produces": []
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'loggers-name'",
                                          "predicate": "{POST /rest/manage/loggers/{name}, consumes [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/heapdump"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/octet-stream",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'heapdump'",
                                          "predicate": "{GET /rest/manage/heapdump, produces [application/octet-stream]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/threaddump"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'threaddump'",
                                          "predicate": "{GET /rest/manage/threaddump, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/metrics"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'metrics'",
                                          "predicate": "{GET /rest/manage/metrics, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/metrics/{requiredMetricName}"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'metrics-requiredMetricName'",
                                          "predicate": "{GET /rest/manage/metrics/{requiredMetricName}, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/scheduledtasks"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'scheduledtasks'",
                                          "predicate": "{GET /rest/manage/scheduledtasks, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/httptrace"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'httptrace'",
                                          "predicate": "{GET /rest/manage/httptrace, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;",
                                                  "name": "handle"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage/mappings"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator web endpoint 'mappings'",
                                          "predicate": "{GET /rest/manage/mappings, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": {
                                              "handlerMethod": {
                                                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.WebMvcLinksHandler",
                                                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/lang/Object;",
                                                  "name": "links"
                                              },
                                              "requestMappingConditions": {
                                                  "consumes": [],
                                                  "headers": [],
                                                  "methods": [
                                                      "GET"
                                                  ],
                                                  "params": [],
                                                  "patterns": [
                                                      "/rest/manage"
                                                  ],
                                                  "produces": [
                                                      {
                                                          "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                                                          "negated": false
                                                      },
                                                      {
                                                          "mediaType": "application/json",
                                                          "negated": false
                                                      }
                                                  ]
                                              }
                                          },
                                          "handler": "Actuator root web endpoint",
                                          "predicate": "{GET /rest/manage, produces [application/vnd.spring-boot.actuator.v2+json || application/json]}"
                                      },
                                      {
                                          "details": null,
                                          "handler": "ResourceHttpRequestHandler [\"classpath:/META-INF/resources/webjars/\"]",
                                          "predicate": "/webjars/**"
                                      },
                                      {
                                          "details": null,
                                          "handler": "ResourceHttpRequestHandler [\"classpath:/META-INF/resources/\", \"classpath:/resources/\", \"classpath:/static/\", \"classpath:/public/\", \"/\"]",
                                          "predicate": "/**"
                                      },
                                      {
                                          "details": null,
                                          "handler": "org.geoserver.ows.FilePublisher@53503335",
                                          "predicate": "/www/**"
                                      },
                                      {
                                          "details": null,
                                          "handler": "org.geoserver.ows.StylePublisher@27aa5547",
                                          "predicate": "/styles/**"
                                      },
                                      {
                                          "details": null,
                                          "handler": "org.geoserver.ows.ClasspathPublisher@14cd8797",
                                          "predicate": "/schemas/**"
                                      },
                                      {
                                          "details": null,
                                          "handler": "org.geoserver.ows.ClasspathPublisher@14cd8797",
                                          "predicate": "/j_acegi_security_check"
                                      },
                                      {
                                          "details": null,
                                          "handler": "org.geoserver.ows.ClasspathPublisher@14cd8797",
                                          "predicate": "/j_spring_security_check"
                                      },
                                      {
                                          "details": null,
                                          "handler": "org.geoserver.ows.ClasspathPublisher@14cd8797",
                                          "predicate": "/login"
                                      },
                                      {
                                          "details": null,
                                          "handler": "org.geoserver.ows.ClasspathPublisher@14cd8797",
                                          "predicate": "/openlayers/**"
                                      },
                                      {
                                          "details": null,
                                          "handler": "org.geoserver.ows.ClasspathPublisher@14cd8797",
                                          "predicate": "/options.png"
                                      },
                                      {
                                          "details": null,
                                          "handler": "org.geoserver.ows.ClasspathPublisher@14cd8797",
                                          "predicate": "/openlayers3/**"
                                      },
                                      {
                                          "details": null,
                                          "handler": "org.springframework.web.servlet.mvc.ServletWrappingController@6d7dca8a",
                                          "predicate": "/web"
                                      },
                                      {
                                          "details": null,
                                          "handler": "org.geoserver.ows.FilePublisher@53503335",
                                          "predicate": "/index.html"
                                      },
                                      {
                                          "details": null,
                                          "handler": "org.springframework.web.servlet.mvc.ServletWrappingController@6d7dca8a",
                                          "predicate": "/web/**"
                                      },
                                      {
                                          "details": null,
                                          "handler": "org.springframework.web.servlet.mvc.ServletWrappingController@6d7dca8a",
                                          "predicate": "/web/resources/**"
                                      }
                                  ]
                              },
                              "servletFilters": [
                                  {
                                      "className": "org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
                                      "name": "requestContextFilter",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "org.geoserver.filters.ThreadLocalsCleanupFilter",
                                      "name": "Thread locals cleanup filter",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "stratus.wms.WMSCachingFilter",
                                      "name": "WMSCachingFilter",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "org.springframework.boot.web.servlet.filter.OrderedHiddenHttpMethodFilter",
                                      "name": "hiddenHttpMethodFilter",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "org.geoserver.filters.FlushSafeFilter",
                                      "name": "FlushSafeFilter",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
                                      "name": "characterEncodingFilter",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "stratus.redis.cache.CachingFilter",
                                      "name": "Catalog Caching Filter",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter",
                                      "name": "httpTraceFilter",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "org.geoserver.filters.SpringDelegatingFilter",
                                      "name": "Spring Delegating Filter",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter",
                                      "name": "webMvcMetricsFilter",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "org.springframework.web.servlet.resource.ResourceUrlEncodingFilter",
                                      "name": "resourceUrlEncodingFilter",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "stratus.controller.ResourceControllerFilter",
                                      "name": "resourceControllerFilter",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "org.springframework.web.filter.CorsFilter",
                                      "name": "corsFilter",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "org.geoserver.security.GeoServerSecurityFilterChainProxy",
                                      "name": "filterChainProxy",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1",
                                      "name": "springSecurityFilterChain",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "org.geoserver.filters.SessionDebugFilter",
                                      "name": "SessionDebugFilter",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
                                      "name": "formContentFilter",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  },
                                  {
                                      "className": "org.geoserver.wms.animate.AnimatorFilter",
                                      "name": "animateFilter",
                                      "servletNameMappings": [],
                                      "urlPatternMappings": [
                                          "/*"
                                      ]
                                  }
                              ],
                              "servlets": [
                                  {
                                      "className": "org.apache.catalina.servlets.DefaultServlet",
                                      "mappings": [
                                          "/"
                                      ],
                                      "name": "default"
                                  },
                                  {
                                      "className": "org.springframework.web.servlet.DispatcherServlet",
                                      "mappings": [
                                          "/*"
                                      ],
                                      "name": "dispatcherServlet"
                                  }
                              ]
                          },
                          "parentId": "stratus-1"
                      }
                  }
              }